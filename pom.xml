<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>eu.kartoffelquadrat</groupId>
    <artifactId>acquirebanker</artifactId>
    <packaging>jar</packaging>
    <version>1.3</version>
    <name>acquirebanker</name>
    <url>http://maven.apache.org</url>

    <!--    ensure your java_home points to at least version 14. E.g. with: export JAVA_HOME=$(/usr/libexec/java_home -v 14) -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.target>11</maven.compiler.target>
        <maven.compiler.source>11</maven.compiler.source>
    </properties>

    <!-- main developer -->
    <developers>
        <developer>
            <name>Maximilian Schiedermeier</name>
            <email>maximilian.schiedermeier@mcgill.ca</email>
            <organization>kartoffelquadrat.eu</organization>
            <organizationUrl>https://github.com/kartoffelquadrat</organizationUrl>
        </developer>
    </developers>

    <!-- legal -->
    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <!-- this parent block lets this maven project extend a prepared spring specific template.-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.0.RELEASE</version>
    </parent>

    <!--    json extras reside in side repo: cronapp-->
    <repositories>
        <repository>
            <id>json extras repo</id>
            <url>https://artifactory.cronapp.io/public-release/</url>
        </repository>
    </repositories>

    <dependencies>
        <!-- This block adds spring boot as a dependency, so we can use the parent pom configuration and non-standard annotations.-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>2.3.0.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.6</version>
        </dependency>
        <!--        extras are required to resolve polymorphism-->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson-extras</artifactId>
            <version>2.8.5</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <!-- Override default name of generated jars -->
        <finalName>AcquireBanker</finalName>

        <plugins>
            <!-- Spring Boot Launcher -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
<!--                    <fork>true</fork>-->
                    <mainClass>eu.kartoffelquadrat.acquirebanker.SpringLauncher</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <!-- set compiler version -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                </configuration>
            </plugin>

            <!-- enforce passing junit tests as build precondition -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
            </plugin>

            <!-- specify main class for exec goal -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>eu.kartoffelquadrat.acquirebanker.Main</mainClass>
                </configuration>
            </plugin>

            <!-- build self-contained jar as default package / install goal-->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>eu.kartoffelquadrat.acquirebanker.Main</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <finalName>AcquireBanker</finalName>
                    <appendAssemblyId>false</appendAssemblyId>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
